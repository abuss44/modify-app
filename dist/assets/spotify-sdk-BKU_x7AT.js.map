{"version":3,"file":"spotify-sdk-BKU_x7AT.js","sources":["../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/EndpointsBase.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/AlbumsEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/ArtistsEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/AudiobooksEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/BrowseEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/ChaptersEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/EpisodesEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/RecommendationsEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/MarketsEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/PlayerEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/PlaylistsEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/SearchEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/ShowsEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/TracksEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/IAuthStrategy.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/UsersEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/endpoints/CurrentUserEndpoints.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/Crypto.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/AccessTokenHelpers.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/ClientCredentialsStrategy.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/ImplicitGrantStrategy.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/AuthorizationCodeWithPKCEStrategy.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/serialization/DefaultResponseDeserializer.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/responsevalidation/DefaultResponseValidator.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/errorhandling/NoOpErrorHandler.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/redirection/DocumentLocationRedirectionStrategy.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/caching/GenericCache.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/caching/LocalStorageCachingStrategy.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/caching/InMemoryCachingStrategy.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/auth/ProvidedAccessTokenStrategy.js","../../node_modules/@spotify/web-api-ts-sdk/dist/mjs/SpotifyApi.js"],"sourcesContent":["export default class EndpointsBase {\n    api;\n    constructor(api) {\n        this.api = api;\n    }\n    async getRequest(url) {\n        return await this.api.makeRequest(\"GET\", url);\n    }\n    async postRequest(url, body, contentType = undefined) {\n        return await this.api.makeRequest(\"POST\", url, body, contentType);\n    }\n    async putRequest(url, body, contentType = undefined) {\n        return await this.api.makeRequest(\"PUT\", url, body, contentType);\n    }\n    async deleteRequest(url, body) {\n        return await this.api.makeRequest(\"DELETE\", url, body);\n    }\n    paramsFor(args) {\n        const params = new URLSearchParams();\n        for (let key of Object.getOwnPropertyNames(args)) {\n            if (args[key] || (args[key] === 0) || (!args[key] && typeof args[key] === 'boolean')) {\n                params.append(key, args[key].toString());\n            }\n        }\n        return [...params].length > 0 ? `?${params.toString()}` : \"\";\n    }\n}\n//# sourceMappingURL=EndpointsBase.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class AlbumsEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            const album = await this.getRequest(`albums/${idOrIds}${params}`);\n            return album;\n        }\n        const params = this.paramsFor({ ids: idOrIds, market });\n        // TODO: only returns top 20, validate here\n        const response = await this.getRequest(`albums${params}`);\n        return response.albums;\n    }\n    tracks(albumId, market, limit, offset) {\n        const params = this.paramsFor({ market, limit, offset });\n        return this.getRequest(`albums/${albumId}/tracks${params}`);\n    }\n}\n//# sourceMappingURL=AlbumsEndpoints.js.map","import EndpointsBase from \"./EndpointsBase.js\";\nexport default class ArtistsEndpoints extends EndpointsBase {\n    async get(idOrIds) {\n        if (typeof idOrIds === \"string\") {\n            const artist = this.getRequest(`artists/${idOrIds}`);\n            return artist;\n        }\n        const params = this.paramsFor({ ids: idOrIds });\n        const response = await this.getRequest(`artists${params}`);\n        return response.artists;\n    }\n    albums(id, includeGroups, market, limit, offset) {\n        const params = this.paramsFor({\n            include_groups: includeGroups,\n            market,\n            limit,\n            offset,\n        });\n        return this.getRequest(`artists/${id}/albums${params}`);\n    }\n    topTracks(id, market) {\n        // BUG: market is flagged as optional in the docs, but it's actually required for this endpoint\n        // otherwise you get a 400\n        const params = this.paramsFor({ market });\n        return this.getRequest(`artists/${id}/top-tracks${params}`);\n    }\n    relatedArtists(id) {\n        return this.getRequest(`artists/${id}/related-artists`);\n    }\n}\n//# sourceMappingURL=ArtistsEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class AudiobooksEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            return this.getRequest(`audiobooks/${idOrIds}${params}`);\n        }\n        const params = this.paramsFor({ ids: idOrIds, market });\n        const response = await this.getRequest(`audiobooks${params}`);\n        return response.audiobooks;\n    }\n    getAudiobookChapters(id, market, limit, offset) {\n        const params = this.paramsFor({ market, limit, offset });\n        return this.getRequest(`audiobooks/${id}/chapters${params}`);\n    }\n}\n//# sourceMappingURL=AudiobooksEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class BrowseEndpoints extends EndpointsBase {\n    getCategories(country, locale, limit, offset) {\n        const params = this.paramsFor({ country, locale, limit, offset });\n        return this.getRequest(`browse/categories${params}`);\n    }\n    getCategory(categoryId, country, locale) {\n        const params = this.paramsFor({ country, locale });\n        return this.getRequest(`browse/categories/${categoryId}${params}`);\n    }\n    getNewReleases(country, limit, offset) {\n        const params = this.paramsFor({ country, limit, offset });\n        return this.getRequest(`browse/new-releases${params}`);\n    }\n    getFeaturedPlaylists(country, locale, timestamp, limit, offset) {\n        const params = this.paramsFor({ country, locale, timestamp, limit, offset });\n        return this.getRequest(`browse/featured-playlists${params}`);\n    }\n    getPlaylistsForCategory(category_id, country, limit, offset) {\n        const params = this.paramsFor({ country, limit, offset });\n        return this.getRequest(`browse/categories/${category_id}/playlists${params}`);\n    }\n}\n//# sourceMappingURL=BrowseEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class ChaptersEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            return this.getRequest(`chapters/${idOrIds}${params}`);\n        }\n        // TODO: Only returns top 50, validate / pre-check here\n        const params = this.paramsFor({ ids: idOrIds, market });\n        const response = await this.getRequest(`chapters${params}`);\n        return response.chapters;\n    }\n}\n//# sourceMappingURL=ChaptersEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class EpisodesEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            return this.getRequest(`episodes/${idOrIds}${params}`);\n        }\n        const params = this.paramsFor({ ids: idOrIds, market });\n        const response = await this.getRequest(`episodes${params}`);\n        return response.episodes;\n    }\n}\n//# sourceMappingURL=EpisodesEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class RecommendationsEndpoints extends EndpointsBase {\n    get(request) {\n        const params = this.paramsFor(request);\n        return this.getRequest(`recommendations${params}`);\n    }\n    genreSeeds() {\n        return this.getRequest('recommendations/available-genre-seeds');\n    }\n}\n//# sourceMappingURL=RecommendationsEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class MarketsEndpoints extends EndpointsBase {\n    getAvailableMarkets() {\n        return this.getRequest('markets');\n    }\n}\n//# sourceMappingURL=MarketsEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class PlayerEndpoints extends EndpointsBase {\n    getPlaybackState(market, additional_types) {\n        const params = this.paramsFor({ market, additional_types });\n        return this.getRequest(`me/player${params}`);\n    }\n    getAvailableDevices() {\n        return this.getRequest('me/player/devices');\n    }\n    getCurrentlyPlayingTrack(market, additional_types) {\n        const params = this.paramsFor({ market, additional_types });\n        return this.getRequest(`me/player/currently-playing${params}`);\n    }\n    getRecentlyPlayedTracks(limit, queryRange) {\n        const paramObj = { limit };\n        if (queryRange) {\n            if (queryRange.type === \"before\") {\n                paramObj.before = queryRange.timestamp;\n            }\n            else if (queryRange.type === \"after\") {\n                paramObj.after = queryRange.timestamp;\n            }\n        }\n        const params = this.paramsFor(paramObj);\n        return this.getRequest(`me/player/recently-played${params}`);\n    }\n    getUsersQueue() {\n        return this.getRequest('me/player/queue');\n    }\n    async transferPlayback(device_ids, play) {\n        if (device_ids.length > 1) {\n            throw new Error(\"Although an array is accepted, only a single device_id is currently supported. Supplying more than one will return 400 Bad Request\");\n        }\n        await this.putRequest('me/player', { device_ids, play });\n    }\n    async startResumePlayback(device_id, context_uri, uris, offset, positionMs) {\n        const params = this.paramsFor({ device_id });\n        await this.putRequest(`me/player/play${params}`, { context_uri, uris, offset, positionMs });\n    }\n    async pausePlayback(device_id) {\n        const params = this.paramsFor({ device_id });\n        await this.putRequest(`me/player/pause${params}`);\n    }\n    async skipToNext(device_id) {\n        const params = this.paramsFor({ device_id });\n        await this.postRequest(`me/player/next${params}`);\n    }\n    async skipToPrevious(device_id) {\n        const params = this.paramsFor({ device_id });\n        await this.postRequest(`me/player/previous${params}`);\n    }\n    async seekToPosition(position_ms, device_id) {\n        const params = this.paramsFor({ position_ms, device_id });\n        await this.putRequest(`me/player/seek${params}`);\n    }\n    async setRepeatMode(state, device_id) {\n        const params = this.paramsFor({ state, device_id });\n        await this.putRequest(`me/player/repeat${params}`);\n    }\n    async setPlaybackVolume(volume_percent, device_id) {\n        const params = this.paramsFor({ volume_percent, device_id });\n        await this.putRequest(`me/player/volume${params}`);\n    }\n    async togglePlaybackShuffle(state, device_id) {\n        const params = this.paramsFor({ state, device_id });\n        await this.putRequest(`me/player/shuffle${params}`);\n    }\n    async addItemToPlaybackQueue(uri, device_id) {\n        const params = this.paramsFor({ uri, device_id });\n        await this.postRequest(`me/player/queue${params}`);\n    }\n}\n//# sourceMappingURL=PlayerEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class PlaylistsEndpoints extends EndpointsBase {\n    getPlaylist(playlist_id, market, fields, additional_types) {\n        // TODO: better support for fields\n        const params = this.paramsFor({ market, fields, additional_types: additional_types?.join(',') });\n        return this.getRequest(`playlists/${playlist_id}${params}`);\n    }\n    getPlaylistItems(playlist_id, market, fields, limit, offset, additional_types) {\n        // TODO: better support for fields\n        const params = this.paramsFor({ market, fields, limit, offset, additional_types: additional_types?.join(',') });\n        return this.getRequest(`playlists/${playlist_id}/tracks${params}`);\n    }\n    async changePlaylistDetails(playlist_id, request) {\n        await this.putRequest(`playlists/${playlist_id}`, request);\n    }\n    movePlaylistItems(playlist_id, range_start, range_length, moveToPosition) {\n        return this.updatePlaylistItems(playlist_id, {\n            range_start,\n            range_length,\n            insert_before: moveToPosition\n        });\n    }\n    updatePlaylistItems(playlist_id, request) {\n        return this.putRequest(`playlists/${playlist_id}/tracks`, request);\n    }\n    async addItemsToPlaylist(playlist_id, uris, position) {\n        await this.postRequest(`playlists/${playlist_id}/tracks`, { position, uris: uris });\n    }\n    async removeItemsFromPlaylist(playlist_id, request) {\n        await this.deleteRequest(`playlists/${playlist_id}/tracks`, request);\n    }\n    getUsersPlaylists(user_id, limit, offset) {\n        const params = this.paramsFor({ limit, offset });\n        return this.getRequest(`users/${user_id}/playlists${params}`);\n    }\n    createPlaylist(user_id, request) {\n        return this.postRequest(`users/${user_id}/playlists`, request);\n    }\n    getPlaylistCoverImage(playlist_id) {\n        return this.getRequest(`playlists/${playlist_id}/images`);\n    }\n    async addCustomPlaylistCoverImage(playlist_id, imageData) {\n        let base64EncodedJpeg = \"\";\n        if (imageData instanceof Buffer) {\n            base64EncodedJpeg = imageData.toString(\"base64\");\n        }\n        else if (imageData instanceof HTMLCanvasElement) {\n            base64EncodedJpeg = imageData.toDataURL(\"image/jpeg\").split(';base64,')[1];\n        }\n        else if (imageData instanceof HTMLImageElement) {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = imageData.width;\n            canvas.height = imageData.height;\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) {\n                throw new Error(\"Could not get canvas context\");\n            }\n            ctx.drawImage(imageData, 0, 0);\n            base64EncodedJpeg = canvas.toDataURL(\"image/jpeg\").split(';base64,')[1];\n        }\n        else if (typeof imageData === \"string\") {\n            base64EncodedJpeg = imageData;\n        }\n        else {\n            throw new Error(\"ImageData must be a Buffer, HTMLImageElement, HTMLCanvasElement, or string containing a base64 encoded jpeg\");\n        }\n        await this.addCustomPlaylistCoverImageFromBase64String(playlist_id, base64EncodedJpeg);\n    }\n    async addCustomPlaylistCoverImageFromBase64String(playlist_id, base64EncodedJpeg) {\n        await this.putRequest(`playlists/${playlist_id}/images`, base64EncodedJpeg, \"image/jpeg\");\n    }\n}\n//# sourceMappingURL=PlaylistsEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class SearchEndpoints extends EndpointsBase {\n    async execute(q, type, market, limit, offset, include_external) {\n        const params = this.paramsFor({ q, type, market, limit, offset, include_external });\n        return await this.getRequest(`search${params}`);\n    }\n}\n//# sourceMappingURL=SearchEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class ShowsEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            return this.getRequest(`shows/${idOrIds}${params}`);\n        }\n        // TODO: only returns 50, validate here\n        const params = this.paramsFor({ ids: idOrIds, market });\n        const response = await this.getRequest(`shows${params}`);\n        return response.shows;\n    }\n    episodes(id, market, limit, offset) {\n        const params = this.paramsFor({ market, limit, offset });\n        return this.getRequest(`shows/${id}/episodes${params}`);\n    }\n}\n//# sourceMappingURL=ShowsEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class TracksEndpoints extends EndpointsBase {\n    async get(idOrIds, market) {\n        if (typeof idOrIds === 'string') {\n            const params = this.paramsFor({ market });\n            return this.getRequest(`tracks/${idOrIds}${params}`);\n        }\n        const params = this.paramsFor({ ids: idOrIds, market });\n        // TODO: only returns top 20, validate here\n        const response = await this.getRequest(`tracks${params}`);\n        return response.tracks;\n    }\n    async audioFeatures(idOrIds) {\n        if (typeof idOrIds === 'string') {\n            return this.getRequest(`audio-features/${idOrIds}`);\n        }\n        const params = this.paramsFor({ ids: idOrIds });\n        const response = await this.getRequest(`audio-features${params}`);\n        return response.audio_features;\n    }\n    audioAnalysis(id) {\n        return this.getRequest(`audio-analysis/${id}`);\n    }\n}\n//# sourceMappingURL=TracksEndpoints.js.map","export const emptyAccessToken = { access_token: \"emptyAccessToken\", token_type: \"\", expires_in: 0, refresh_token: \"\", expires: -1 };\nexport function isEmptyAccessToken(value) {\n    return value === emptyAccessToken;\n}\n//# sourceMappingURL=IAuthStrategy.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class UsersEndpoints extends EndpointsBase {\n    profile(userId) {\n        return this.getRequest(`users/${userId}`);\n    }\n}\n//# sourceMappingURL=UsersEndpoints.js.map","import EndpointsBase from './EndpointsBase.js';\nexport default class CurrentUserEndpoints extends EndpointsBase {\n    albums;\n    audiobooks;\n    episodes;\n    playlists;\n    shows;\n    tracks;\n    constructor(api) {\n        super(api);\n        this.albums = new CurrentUserAlbumsEndpoints(api);\n        this.audiobooks = new CurrentUserAudiobooksEndpoints(api);\n        this.episodes = new CurrentUserEpisodesEndpoints(api);\n        this.playlists = new CurrentUserPlaylistsEndpoints(api);\n        this.shows = new CurrentUserShowsEndpoints(api);\n        this.tracks = new CurrentUserTracksEndpoints(api);\n    }\n    profile() {\n        return this.getRequest('me');\n    }\n    topItems(type, time_range, limit, offset) {\n        const params = this.paramsFor({ time_range, limit, offset });\n        return this.getRequest(`me/top/${type}${params}`);\n    }\n    followedArtists(after, limit) {\n        const params = this.paramsFor({ type: \"artist\", after, limit });\n        return this.getRequest(`me/following${params}`);\n    }\n    async followArtistsOrUsers(ids, type) {\n        const params = this.paramsFor({ type });\n        await this.putRequest(`me/following${params}`, { ids });\n    }\n    async unfollowArtistsOrUsers(ids, type) {\n        const params = this.paramsFor({ type });\n        await this.deleteRequest(`me/following${params}`, { ids });\n    }\n    followsArtistsOrUsers(ids, type) {\n        const params = this.paramsFor({ ids, type });\n        return this.getRequest(`me/following/contains${params}`);\n    }\n}\nclass CurrentUserAlbumsEndpoints extends EndpointsBase {\n    savedAlbums(limit, offset, market) {\n        const params = this.paramsFor({ limit, offset, market });\n        return this.getRequest(`me/albums${params}`);\n    }\n    async saveAlbums(ids) {\n        await this.putRequest('me/albums', ids);\n    }\n    async removeSavedAlbums(ids) {\n        await this.deleteRequest('me/albums', ids);\n    }\n    hasSavedAlbums(ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`me/albums/contains${params}`);\n    }\n}\nclass CurrentUserAudiobooksEndpoints extends EndpointsBase {\n    savedAudiobooks(limit, offset) {\n        const params = this.paramsFor({ limit, offset });\n        return this.getRequest(`me/audiobooks${params}`);\n    }\n    async saveAudiobooks(ids) {\n        await this.putRequest('me/audiobooks', ids);\n    }\n    async removeSavedAudiobooks(ids) {\n        await this.deleteRequest('me/audiobooks', ids);\n    }\n    hasSavedAudiobooks(ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`me/audiobooks/contains${params}`);\n    }\n}\nclass CurrentUserEpisodesEndpoints extends EndpointsBase {\n    savedEpisodes(market, limit, offset) {\n        const params = this.paramsFor({ market, limit, offset });\n        return this.getRequest(`me/episodes${params}`);\n    }\n    async saveEpisodes(ids) {\n        await this.putRequest(`me/episodes`, ids);\n    }\n    async removeSavedEpisodes(ids) {\n        await this.deleteRequest(`me/episodes`, ids);\n    }\n    hasSavedEpisodes(ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`me/episodes/contains${params}`);\n    }\n}\nclass CurrentUserPlaylistsEndpoints extends EndpointsBase {\n    playlists(limit, offset) {\n        const params = this.paramsFor({ limit, offset });\n        return this.getRequest(`me/playlists${params}`);\n    }\n    async follow(playlist_id) {\n        await this.putRequest(`playlists/${playlist_id}/followers`);\n    }\n    async unfollow(playlist_id) {\n        await this.deleteRequest(`playlists/${playlist_id}/followers`);\n    }\n    isFollowing(playlistId, ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`playlists/${playlistId}/followers/contains${params}`);\n    }\n}\nclass CurrentUserShowsEndpoints extends EndpointsBase {\n    savedShows(limit, offset) {\n        const params = this.paramsFor({ limit, offset });\n        return this.getRequest(`me/shows${params}`);\n    }\n    saveShows(ids) {\n        const params = this.paramsFor({ ids });\n        return this.putRequest(`me/shows${params}`);\n    }\n    removeSavedShows(ids, market) {\n        const params = this.paramsFor({ ids, market });\n        return this.deleteRequest(`me/shows${params}`);\n    }\n    hasSavedShow(ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`me/shows/contains${params}`);\n    }\n}\nclass CurrentUserTracksEndpoints extends EndpointsBase {\n    savedTracks(limit, offset, market) {\n        const params = this.paramsFor({ limit, offset, market });\n        return this.getRequest(`me/tracks${params}`);\n    }\n    async saveTracks(ids) {\n        await this.putRequest('me/tracks', ids);\n    }\n    async removeSavedTracks(ids) {\n        await this.deleteRequest('me/tracks', ids);\n    }\n    hasSavedTracks(ids) {\n        const params = this.paramsFor({ ids });\n        return this.getRequest(`me/tracks/contains${params}`);\n    }\n}\n//# sourceMappingURL=CurrentUserEndpoints.js.map","export class Crypto {\n    static get current() {\n        return this.hasSubtleCrypto ? window.crypto : this.tryLoadNodeWebCrypto();\n    }\n    static get hasSubtleCrypto() {\n        return typeof window !== 'undefined' && typeof window.crypto !== 'undefined' && typeof window.crypto.subtle !== 'undefined';\n    }\n    static tryLoadNodeWebCrypto() {\n        try {\n            // Deliberately avoid bundling for browsers depending\n            // on node by doing this require during execution.\n            const { webcrypto } = require('crypto');\n            return webcrypto;\n        }\n        catch (e) {\n            throw e;\n        }\n    }\n}\n//# sourceMappingURL=Crypto.js.map","import { Crypto } from \"./Crypto.js\";\nexport default class AccessTokenHelpers {\n    static async refreshCachedAccessToken(clientId, item) {\n        const updated = await AccessTokenHelpers.refreshToken(clientId, item.refresh_token);\n        return AccessTokenHelpers.toCachable(updated);\n    }\n    static toCachable(item) {\n        if (item.expires && item.expires === -1) {\n            return item;\n        }\n        return { ...item, expires: this.calculateExpiry(item) };\n    }\n    static calculateExpiry(item) {\n        return Date.now() + (item.expires_in * 1000);\n    }\n    static async refreshToken(clientId, refreshToken) {\n        const params = new URLSearchParams();\n        params.append(\"client_id\", clientId);\n        params.append(\"grant_type\", \"refresh_token\");\n        params.append(\"refresh_token\", refreshToken);\n        const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: params\n        });\n        const text = await result.text();\n        if (!result.ok) {\n            throw new Error(`Failed to refresh token: ${result.statusText}, ${text}`);\n        }\n        const json = JSON.parse(text);\n        return json;\n    }\n    static generateCodeVerifier(length) {\n        let text = '';\n        let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (let i = 0; i < length; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n    }\n    static async generateCodeChallenge(codeVerifier) {\n        const data = new TextEncoder().encode(codeVerifier);\n        const digest = await Crypto.current.subtle.digest('SHA-256', data);\n        const digestBytes = [...new Uint8Array(digest)];\n        const hasBuffer = typeof Buffer !== 'undefined';\n        const digestAsBase64 = hasBuffer\n            ? Buffer.from(digest).toString('base64')\n            : btoa(String.fromCharCode.apply(null, digestBytes));\n        return digestAsBase64\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/=+$/, '');\n    }\n}\n//# sourceMappingURL=AccessTokenHelpers.js.map","import AccessTokenHelpers from \"./AccessTokenHelpers.js\";\nexport default class ClientCredentialsStrategy {\n    clientId;\n    clientSecret;\n    scopes;\n    static cacheKey = \"spotify-sdk:ClientCredentialsStrategy:token\";\n    configuration = null;\n    get cache() { return this.configuration.cachingStrategy; }\n    constructor(clientId, clientSecret, scopes = []) {\n        this.clientId = clientId;\n        this.clientSecret = clientSecret;\n        this.scopes = scopes;\n    }\n    setConfiguration(configuration) {\n        this.configuration = configuration;\n    }\n    async getOrCreateAccessToken() {\n        const token = await this.cache.getOrCreate(ClientCredentialsStrategy.cacheKey, async () => {\n            const token = await this.getTokenFromApi();\n            return AccessTokenHelpers.toCachable(token);\n        }, async (_) => {\n            const refreshed = await this.getTokenFromApi();\n            return AccessTokenHelpers.toCachable(refreshed);\n        });\n        return token;\n    }\n    async getAccessToken() {\n        const token = await this.cache.get(ClientCredentialsStrategy.cacheKey);\n        return token;\n    }\n    removeAccessToken() {\n        this.cache.remove(ClientCredentialsStrategy.cacheKey);\n    }\n    async getTokenFromApi() {\n        const options = {\n            grant_type: 'client_credentials',\n            scope: this.scopes.join(' ')\n        };\n        const bodyAsString = Object.keys(options).map(key => key + '=' + options[key]).join('&');\n        const hasBuffer = typeof Buffer !== 'undefined';\n        const credentials = `${this.clientId}:${this.clientSecret}`;\n        const basicAuth = hasBuffer\n            ? Buffer.from(credentials).toString('base64')\n            : btoa(credentials);\n        const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                \"Authorization\": `Basic ${basicAuth}`\n            },\n            body: bodyAsString\n        });\n        if (result.status !== 200) {\n            throw new Error(\"Failed to get access token.\");\n        }\n        const json = await result.json();\n        return json;\n    }\n}\n//# sourceMappingURL=ClientCredentialsStrategy.js.map","import AccessTokenHelpers from \"./AccessTokenHelpers.js\";\nimport { emptyAccessToken } from \"./IAuthStrategy.js\";\nexport default class ImplicitGrantStrategy {\n    clientId;\n    redirectUri;\n    scopes;\n    static cacheKey = \"spotify-sdk:ImplicitGrantStrategy:token\";\n    configuration = null;\n    get cache() { return this.configuration.cachingStrategy; }\n    constructor(clientId, redirectUri, scopes) {\n        this.clientId = clientId;\n        this.redirectUri = redirectUri;\n        this.scopes = scopes;\n    }\n    setConfiguration(configuration) {\n        this.configuration = configuration;\n    }\n    async getOrCreateAccessToken() {\n        const token = await this.cache.getOrCreate(ImplicitGrantStrategy.cacheKey, async () => {\n            const token = await this.redirectOrVerifyToken();\n            return AccessTokenHelpers.toCachable(token);\n        }, async (expiring) => {\n            return AccessTokenHelpers.refreshCachedAccessToken(this.clientId, expiring);\n        });\n        return token;\n    }\n    async getAccessToken() {\n        const token = await this.cache.get(ImplicitGrantStrategy.cacheKey);\n        return token;\n    }\n    removeAccessToken() {\n        this.cache.remove(ImplicitGrantStrategy.cacheKey);\n    }\n    async redirectOrVerifyToken() {\n        const hashParams = new URLSearchParams(window.location.hash.substring(1));\n        const accessToken = hashParams.get(\"access_token\");\n        if (accessToken) {\n            return Promise.resolve({\n                access_token: accessToken,\n                token_type: hashParams.get(\"token_type\") ?? \"\",\n                expires_in: parseInt(hashParams.get(\"expires_in\") ?? \"0\"),\n                refresh_token: hashParams.get(\"refresh_token\") ?? \"\",\n                expires: Number(hashParams.get(\"expires\")) || 0\n            });\n        }\n        const scopes = this.scopes ?? [];\n        var scope = scopes.join(' ');\n        const params = new URLSearchParams();\n        params.append(\"client_id\", this.clientId);\n        params.append(\"response_type\", \"token\");\n        params.append(\"redirect_uri\", this.redirectUri);\n        params.append(\"scope\", scope);\n        const authUrl = 'https://accounts.spotify.com/authorize?' + params.toString();\n        this.configuration.redirectionStrategy.redirect(authUrl);\n        return emptyAccessToken;\n    }\n}\n//# sourceMappingURL=ImplicitGrantStrategy.js.map","import AccessTokenHelpers from \"./AccessTokenHelpers.js\";\nimport { emptyAccessToken } from \"./IAuthStrategy.js\";\nexport default class AuthorizationCodeWithPKCEStrategy {\n    clientId;\n    redirectUri;\n    scopes;\n    static cacheKey = \"spotify-sdk:AuthorizationCodeWithPKCEStrategy:token\";\n    configuration = null;\n    get cache() { return this.configuration.cachingStrategy; }\n    constructor(clientId, redirectUri, scopes) {\n        this.clientId = clientId;\n        this.redirectUri = redirectUri;\n        this.scopes = scopes;\n    }\n    setConfiguration(configuration) {\n        this.configuration = configuration;\n    }\n    async getOrCreateAccessToken() {\n        const token = await this.cache.getOrCreate(AuthorizationCodeWithPKCEStrategy.cacheKey, async () => {\n            const token = await this.redirectOrVerifyToken();\n            return AccessTokenHelpers.toCachable(token);\n        }, async (expiring) => {\n            return AccessTokenHelpers.refreshCachedAccessToken(this.clientId, expiring);\n        });\n        return token;\n    }\n    async getAccessToken() {\n        const token = await this.cache.get(AuthorizationCodeWithPKCEStrategy.cacheKey);\n        return token;\n    }\n    removeAccessToken() {\n        this.cache.remove(AuthorizationCodeWithPKCEStrategy.cacheKey);\n    }\n    async redirectOrVerifyToken() {\n        const hashParams = new URLSearchParams(window.location.search);\n        const code = hashParams.get(\"code\");\n        if (code) {\n            const token = await this.verifyAndExchangeCode(code);\n            this.removeCodeFromUrl();\n            return token;\n        }\n        this.redirectToSpotify();\n        return emptyAccessToken; // Redirected away at this point, just make TypeScript happy :)         \n    }\n    async redirectToSpotify() {\n        const verifier = AccessTokenHelpers.generateCodeVerifier(128);\n        const challenge = await AccessTokenHelpers.generateCodeChallenge(verifier);\n        const singleUseVerifier = { verifier, expiresOnAccess: true };\n        this.cache.setCacheItem(\"spotify-sdk:verifier\", singleUseVerifier);\n        const redirectTarget = await this.generateRedirectUrlForUser(this.scopes, challenge);\n        await this.configuration.redirectionStrategy.redirect(redirectTarget);\n    }\n    async verifyAndExchangeCode(code) {\n        const cachedItem = await this.cache.get(\"spotify-sdk:verifier\");\n        const verifier = cachedItem?.verifier;\n        if (!verifier) {\n            throw new Error(\"No verifier found in cache - can't validate query string callback parameters.\");\n        }\n        await this.configuration.redirectionStrategy.onReturnFromRedirect();\n        return await this.exchangeCodeForToken(code, verifier);\n    }\n    removeCodeFromUrl() {\n        const url = new URL(window.location.href);\n        url.searchParams.delete(\"code\");\n        const newUrl = url.search ? url.href : url.href.replace('?', '');\n        window.history.replaceState({}, document.title, newUrl);\n    }\n    async generateRedirectUrlForUser(scopes, challenge) {\n        const scope = scopes.join(' ');\n        const params = new URLSearchParams();\n        params.append(\"client_id\", this.clientId);\n        params.append(\"response_type\", \"code\");\n        params.append(\"redirect_uri\", this.redirectUri);\n        params.append(\"scope\", scope);\n        params.append(\"code_challenge_method\", \"S256\");\n        params.append(\"code_challenge\", challenge);\n        return `https://accounts.spotify.com/authorize?${params.toString()}`;\n    }\n    async exchangeCodeForToken(code, verifier) {\n        const params = new URLSearchParams();\n        params.append(\"client_id\", this.clientId);\n        params.append(\"grant_type\", \"authorization_code\");\n        params.append(\"code\", code);\n        params.append(\"redirect_uri\", this.redirectUri);\n        params.append(\"code_verifier\", verifier);\n        const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: params\n        });\n        const text = await result.text();\n        if (!result.ok) {\n            throw new Error(`Failed to exchange code for token: ${result.statusText}, ${text}`);\n        }\n        const json = JSON.parse(text);\n        return json;\n    }\n}\n//# sourceMappingURL=AuthorizationCodeWithPKCEStrategy.js.map","export default class DefaultResponseDeserializer {\n    async deserialize(response) {\n        const text = await response.text();\n        if (text.length > 0) {\n            const json = JSON.parse(text);\n            return json;\n        }\n        return null;\n    }\n}\n//# sourceMappingURL=DefaultResponseDeserializer.js.map","export default class DefaultResponseValidator {\n    async validateResponse(response) {\n        switch (response.status) {\n            case 401:\n                throw new Error(\"Bad or expired token. This can happen if the user revoked a token or the access token has expired. You should re-authenticate the user.\");\n            case 403:\n                const body = await response.text();\n                throw new Error(`Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here. Body: ${body}`);\n            case 429:\n                throw new Error(\"The app has exceeded its rate limits.\");\n            default:\n                if (!response.status.toString().startsWith('20')) {\n                    const body = await response.text();\n                    throw new Error(`Unrecognised response code: ${response.status} - ${response.statusText}. Body: ${body}`);\n                }\n        }\n    }\n}\n//# sourceMappingURL=DefaultResponseValidator.js.map","export default class NoOpErrorHandler {\n    async handleErrors(_) {\n        return false;\n    }\n}\n//# sourceMappingURL=NoOpErrorHandler.js.map","export default class DocumentLocationRedirectionStrategy {\n    async redirect(targetUrl) {\n        document.location = targetUrl.toString();\n    }\n    async onReturnFromRedirect() {\n    }\n}\n//# sourceMappingURL=DocumentLocationRedirectionStrategy.js.map","import { isEmptyAccessToken } from \"../auth/IAuthStrategy.js\";\nexport default class GenericCache {\n    storage;\n    updateFunctions;\n    autoRenewInterval;\n    autoRenewWindow;\n    constructor(storage, updateFunctions = new Map(), autoRenewInterval = 0, autoRenewWindow = 2 * 60 * 1000 // Two minutes\n    ) {\n        this.storage = storage;\n        this.updateFunctions = updateFunctions;\n        this.autoRenewInterval = autoRenewInterval;\n        this.autoRenewWindow = autoRenewWindow;\n        if (this.autoRenewInterval > 0) {\n            setInterval(() => this.autoRenewRenewableItems(), this.autoRenewInterval);\n        }\n    }\n    async getOrCreate(cacheKey, createFunction, updateFunction) {\n        if (updateFunction) {\n            this.updateFunctions.set(cacheKey, updateFunction);\n        }\n        const item = await this.get(cacheKey);\n        if (item) {\n            return item;\n        }\n        const newCacheItem = await createFunction();\n        if (!newCacheItem) {\n            throw new Error(\"Could not create cache item\");\n        }\n        if (!isEmptyAccessToken(newCacheItem)) {\n            this.setCacheItem(cacheKey, newCacheItem);\n        }\n        return newCacheItem;\n    }\n    async get(cacheKey) {\n        let asString = this.storage.get(cacheKey);\n        let cachedItem = asString ? JSON.parse(asString) : null;\n        if (this.itemDueToExpire(cachedItem) && this.updateFunctions.has(cacheKey)) {\n            const updateFunction = this.updateFunctions.get(cacheKey);\n            await this.tryUpdateItem(cacheKey, cachedItem, updateFunction);\n            // Ensure updated item is returned\n            asString = this.storage.get(cacheKey);\n            cachedItem = asString ? JSON.parse(asString) : null;\n        }\n        if (!cachedItem) {\n            return null;\n        }\n        if (cachedItem.expires && (cachedItem.expires === -1 || cachedItem.expires <= Date.now())) {\n            this.remove(cacheKey);\n            return null;\n        }\n        if (cachedItem.expiresOnAccess && cachedItem.expiresOnAccess === true) {\n            this.remove(cacheKey);\n            return cachedItem;\n        }\n        return cachedItem;\n    }\n    set(cacheKey, value, expiresIn) {\n        const expires = Date.now() + expiresIn;\n        const cacheItem = { ...value, expires };\n        this.setCacheItem(cacheKey, cacheItem);\n    }\n    setCacheItem(cacheKey, cacheItem) {\n        const asString = JSON.stringify(cacheItem);\n        this.storage.set(cacheKey, asString);\n    }\n    remove(cacheKey) {\n        this.storage.remove(cacheKey);\n    }\n    itemDueToExpire(item) {\n        if (!item) {\n            return false;\n        }\n        if (!item.expires) {\n            return false;\n        }\n        return item.expires - Date.now() < (this.autoRenewWindow);\n    }\n    async autoRenewRenewableItems() {\n        this.updateFunctions.forEach(async (updateFunction, key) => {\n            const cachedItem = await this.get(key);\n            if (!cachedItem) {\n                return;\n            }\n            if (updateFunction && this.itemDueToExpire(cachedItem)) {\n                await this.tryUpdateItem(key, cachedItem, updateFunction);\n            }\n        });\n    }\n    async tryUpdateItem(key, cachedItem, updateFunction) {\n        try {\n            const updated = await updateFunction(cachedItem);\n            if (updated) {\n                this.setCacheItem(key, updated);\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\n//# sourceMappingURL=GenericCache.js.map","import GenericCache from \"./GenericCache.js\";\nexport default class LocalStorageCachingStrategy extends GenericCache {\n    constructor() {\n        super(new LocalStorageCacheStore());\n    }\n}\nclass LocalStorageCacheStore {\n    get(key) {\n        return localStorage.getItem(key);\n    }\n    set(key, value) {\n        localStorage.setItem(key, value);\n    }\n    remove(key) {\n        localStorage.removeItem(key);\n    }\n}\n//# sourceMappingURL=LocalStorageCachingStrategy.js.map","import GenericCache from \"./GenericCache.js\";\nexport default class InMemoryCachingStrategy extends GenericCache {\n    constructor() {\n        super(new DictionaryCacheStore());\n    }\n}\nclass DictionaryCacheStore {\n    cache = new Map();\n    get(key) {\n        return this.cache.get(key) ?? null;\n    }\n    set(key, value) {\n        this.cache.set(key, value);\n    }\n    remove(key) {\n        this.cache.delete(key);\n    }\n}\n//# sourceMappingURL=InMemoryCachingStrategy.js.map","import AccessTokenHelpers from \"./AccessTokenHelpers.js\";\n/**\n * This strategy is used when you already have an access token and want to use it.\n * The authentication strategy will automatically renew the token when it expires.\n * Designed to allow a browser-based-app to post the access token to the server and use it from there.\n * @constructor\n * @param {string} clientId - Spotify application client id.\n * @param {string} accessToken - The access token returned from a client side Authorization Code with PKCE flow.\n */\nexport default class ProvidedAccessTokenStrategy {\n    clientId;\n    accessToken;\n    refreshTokenAction;\n    constructor(clientId, accessToken, refreshTokenAction) {\n        this.clientId = clientId;\n        this.accessToken = accessToken;\n        this.refreshTokenAction = refreshTokenAction || AccessTokenHelpers.refreshCachedAccessToken;\n        // If the raw token from the jwt response is provided here\n        // Calculate an absolute `expiry` value.\n        // Caveat: If this token isn't fresh, this value will be off.\n        // It's the responsibility of the calling code to either set a valid\n        // expires property, or ensure expires_in accounts for any lag between\n        // issuing and passing here.\n        if (!this.accessToken.expires) {\n            this.accessToken.expires = AccessTokenHelpers.calculateExpiry(this.accessToken);\n        }\n    }\n    setConfiguration(_) {\n    }\n    async getOrCreateAccessToken() {\n        if (this.accessToken.expires && this.accessToken.expires <= Date.now()) {\n            const refreshed = await this.refreshTokenAction(this.clientId, this.accessToken);\n            this.accessToken = refreshed;\n        }\n        return this.accessToken;\n    }\n    async getAccessToken() {\n        return this.accessToken;\n    }\n    removeAccessToken() {\n        this.accessToken = {\n            access_token: \"\",\n            token_type: \"\",\n            expires_in: 0,\n            refresh_token: \"\",\n            expires: 0\n        };\n    }\n}\n//# sourceMappingURL=ProvidedAccessTokenStrategy.js.map","import AlbumsEndpoints from \"./endpoints/AlbumsEndpoints.js\";\nimport ArtistsEndpoints from \"./endpoints/ArtistsEndpoints.js\";\nimport AudiobooksEndpoints from \"./endpoints/AudiobooksEndpoints.js\";\nimport BrowseEndpoints from \"./endpoints/BrowseEndpoints.js\";\nimport ChaptersEndpoints from \"./endpoints/ChaptersEndpoints.js\";\nimport EpisodesEndpoints from \"./endpoints/EpisodesEndpoints.js\";\nimport RecommendationsEndpoints from \"./endpoints/RecommendationsEndpoints.js\";\nimport MarketsEndpoints from \"./endpoints/MarketsEndpoints.js\";\nimport PlayerEndpoints from \"./endpoints/PlayerEndpoints.js\";\nimport PlaylistsEndpoints from \"./endpoints/PlaylistsEndpoints.js\";\nimport SearchEndpoints from \"./endpoints/SearchEndpoints.js\";\nimport ShowsEndpoints from \"./endpoints/ShowsEndpoints.js\";\nimport TracksEndpoints from \"./endpoints/TracksEndpoints.js\";\nimport { isEmptyAccessToken } from \"./auth/IAuthStrategy.js\";\nimport UsersEndpoints from \"./endpoints/UsersEndpoints.js\";\nimport CurrentUserEndpoints from \"./endpoints/CurrentUserEndpoints.js\";\nimport ClientCredentialsStrategy from \"./auth/ClientCredentialsStrategy.js\";\nimport ImplicitGrantStrategy from \"./auth/ImplicitGrantStrategy.js\";\nimport AuthorizationCodeWithPKCEStrategy from \"./auth/AuthorizationCodeWithPKCEStrategy.js\";\nimport DefaultResponseDeserializer from \"./serialization/DefaultResponseDeserializer.js\";\nimport DefaultResponseValidator from \"./responsevalidation/DefaultResponseValidator.js\";\nimport NoOpErrorHandler from \"./errorhandling/NoOpErrorHandler.js\";\nimport DocumentLocationRedirectionStrategy from \"./redirection/DocumentLocationRedirectionStrategy.js\";\nimport LocalStorageCachingStrategy from \"./caching/LocalStorageCachingStrategy.js\";\nimport InMemoryCachingStrategy from \"./caching/InMemoryCachingStrategy.js\";\nimport ProvidedAccessTokenStrategy from \"./auth/ProvidedAccessTokenStrategy.js\";\nexport class SpotifyApi {\n    sdkConfig;\n    static rootUrl = \"https://api.spotify.com/v1/\";\n    authenticationStrategy;\n    albums;\n    artists;\n    audiobooks;\n    browse;\n    chapters;\n    episodes;\n    recommendations;\n    markets;\n    player;\n    playlists;\n    shows;\n    tracks;\n    users;\n    search;\n    currentUser;\n    constructor(authentication, config) {\n        this.sdkConfig = this.initializeSdk(config);\n        this.albums = new AlbumsEndpoints(this);\n        this.artists = new ArtistsEndpoints(this);\n        this.audiobooks = new AudiobooksEndpoints(this);\n        this.browse = new BrowseEndpoints(this);\n        this.chapters = new ChaptersEndpoints(this);\n        this.episodes = new EpisodesEndpoints(this);\n        this.recommendations = new RecommendationsEndpoints(this);\n        this.markets = new MarketsEndpoints(this);\n        this.player = new PlayerEndpoints(this);\n        this.playlists = new PlaylistsEndpoints(this);\n        this.shows = new ShowsEndpoints(this);\n        this.tracks = new TracksEndpoints(this);\n        this.users = new UsersEndpoints(this);\n        this.currentUser = new CurrentUserEndpoints(this);\n        const search = new SearchEndpoints(this);\n        this.search = search.execute.bind(search);\n        this.authenticationStrategy = authentication;\n        this.authenticationStrategy.setConfiguration(this.sdkConfig);\n    }\n    async makeRequest(method, url, body = undefined, contentType = undefined) {\n        try {\n            const accessToken = await this.authenticationStrategy.getOrCreateAccessToken();\n            if (isEmptyAccessToken(accessToken)) {\n                console.warn(\"No access token found, authenticating now.\");\n                return null;\n            }\n            const token = accessToken?.access_token;\n            const fullUrl = SpotifyApi.rootUrl + url;\n            const opts = {\n                method: method,\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    \"Content-Type\": contentType ?? \"application/json\"\n                },\n                body: body ? typeof body === \"string\" ? body : JSON.stringify(body) : undefined\n            };\n            this.sdkConfig.beforeRequest(fullUrl, opts);\n            const result = await this.sdkConfig.fetch(fullUrl, opts);\n            this.sdkConfig.afterRequest(fullUrl, opts, result);\n            if (result.status === 204) {\n                return null;\n            }\n            await this.sdkConfig.responseValidator.validateResponse(result);\n            return this.sdkConfig.deserializer.deserialize(result);\n        }\n        catch (error) {\n            const handled = await this.sdkConfig.errorHandler.handleErrors(error);\n            if (!handled) {\n                throw error;\n            }\n            return null;\n        }\n    }\n    initializeSdk(config) {\n        const isBrowser = typeof window !== 'undefined';\n        const defaultConfig = {\n            fetch: (req, init) => fetch(req, init),\n            beforeRequest: (_, __) => { },\n            afterRequest: (_, __, ___) => { },\n            deserializer: new DefaultResponseDeserializer(),\n            responseValidator: new DefaultResponseValidator(),\n            errorHandler: new NoOpErrorHandler(),\n            redirectionStrategy: new DocumentLocationRedirectionStrategy(),\n            cachingStrategy: isBrowser\n                ? new LocalStorageCachingStrategy()\n                : new InMemoryCachingStrategy()\n        };\n        return { ...defaultConfig, ...config };\n    }\n    switchAuthenticationStrategy(authentication) {\n        this.authenticationStrategy = authentication;\n        this.authenticationStrategy.setConfiguration(this.sdkConfig);\n        this.authenticationStrategy.getOrCreateAccessToken(); // trigger any redirects \n    }\n    /**\n     * Use this when you're running in a browser and you want to control when first authentication+redirect happens.\n    */\n    async authenticate() {\n        const response = await this.authenticationStrategy.getOrCreateAccessToken(); // trigger any redirects\n        return {\n            authenticated: response.expires > Date.now() && !isEmptyAccessToken(response),\n            accessToken: response\n        };\n    }\n    /**\n     * @returns the current access token. null implies the SpotifyApi is not yet authenticated.\n     */\n    async getAccessToken() {\n        return this.authenticationStrategy.getAccessToken();\n    }\n    /**\n     * Removes the access token if it exists.\n     */\n    logOut() {\n        this.authenticationStrategy.removeAccessToken();\n    }\n    static withUserAuthorization(clientId, redirectUri, scopes = [], config) {\n        const strategy = new AuthorizationCodeWithPKCEStrategy(clientId, redirectUri, scopes);\n        return new SpotifyApi(strategy, config);\n    }\n    static withClientCredentials(clientId, clientSecret, scopes = [], config) {\n        const strategy = new ClientCredentialsStrategy(clientId, clientSecret, scopes);\n        return new SpotifyApi(strategy, config);\n    }\n    static withImplicitGrant(clientId, redirectUri, scopes = [], config) {\n        const strategy = new ImplicitGrantStrategy(clientId, redirectUri, scopes);\n        return new SpotifyApi(strategy, config);\n    }\n    /**\n     * Use this when you're running in a Node environment, and accepting the access token from a client-side `performUserAuthorization` call.\n     * You can also use this method if you already have an access token and don't want to use the built-in authentication strategies.\n     */\n    static withAccessToken(clientId, token, config) {\n        const strategy = new ProvidedAccessTokenStrategy(clientId, token);\n        return new SpotifyApi(strategy, config);\n    }\n    static async performUserAuthorization(clientId, redirectUri, scopes, onAuthorizationOrUrl, config) {\n        const strategy = new AuthorizationCodeWithPKCEStrategy(clientId, redirectUri, scopes);\n        const client = new SpotifyApi(strategy, config);\n        const accessToken = await client.authenticationStrategy.getOrCreateAccessToken();\n        if (!isEmptyAccessToken(accessToken)) {\n            if (typeof onAuthorizationOrUrl === \"string\") {\n                console.log(\"Posting access token to postback URL.\");\n                await fetch(onAuthorizationOrUrl, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(accessToken)\n                });\n            }\n            else {\n                await onAuthorizationOrUrl(accessToken);\n            }\n        }\n        return {\n            authenticated: accessToken.expires > Date.now() && !isEmptyAccessToken(accessToken),\n            accessToken\n        };\n    }\n}\n//# sourceMappingURL=SpotifyApi.js.map"],"names":["EndpointsBase","api","__publicField","url","body","contentType","args","params","key","AlbumsEndpoints","idOrIds","market","albumId","limit","offset","ArtistsEndpoints","id","includeGroups","AudiobooksEndpoints","BrowseEndpoints","country","locale","categoryId","timestamp","category_id","ChaptersEndpoints","EpisodesEndpoints","RecommendationsEndpoints","request","MarketsEndpoints","PlayerEndpoints","additional_types","queryRange","paramObj","device_ids","play","device_id","context_uri","uris","positionMs","position_ms","state","volume_percent","uri","PlaylistsEndpoints","playlist_id","fields","range_start","range_length","moveToPosition","position","user_id","imageData","base64EncodedJpeg","canvas","ctx","SearchEndpoints","q","type","include_external","ShowsEndpoints","TracksEndpoints","emptyAccessToken","isEmptyAccessToken","value","UsersEndpoints","userId","CurrentUserEndpoints","CurrentUserAlbumsEndpoints","CurrentUserAudiobooksEndpoints","CurrentUserEpisodesEndpoints","CurrentUserPlaylistsEndpoints","CurrentUserShowsEndpoints","CurrentUserTracksEndpoints","time_range","after","ids","playlistId","Crypto","webcrypto","AccessTokenHelpers","clientId","item","updated","refreshToken","result","text","length","possible","i","codeVerifier","data","digest","digestBytes","_ClientCredentialsStrategy","clientSecret","scopes","configuration","token","_","refreshed","options","bodyAsString","hasBuffer","credentials","basicAuth","ClientCredentialsStrategy","_ImplicitGrantStrategy","redirectUri","expiring","hashParams","accessToken","scope","authUrl","ImplicitGrantStrategy","_AuthorizationCodeWithPKCEStrategy","code","verifier","challenge","singleUseVerifier","redirectTarget","cachedItem","newUrl","AuthorizationCodeWithPKCEStrategy","DefaultResponseDeserializer","response","DefaultResponseValidator","NoOpErrorHandler","DocumentLocationRedirectionStrategy","targetUrl","GenericCache","storage","updateFunctions","autoRenewInterval","autoRenewWindow","cacheKey","createFunction","updateFunction","newCacheItem","asString","expiresIn","expires","cacheItem","e","LocalStorageCachingStrategy","LocalStorageCacheStore","InMemoryCachingStrategy","DictionaryCacheStore","ProvidedAccessTokenStrategy","refreshTokenAction","_SpotifyApi","authentication","config","search","method","fullUrl","opts","error","isBrowser","req","init","__","___","strategy","onAuthorizationOrUrl","SpotifyApi"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]}