import { SpotifyApi } from '@spotify/web-api-ts-sdk';

const CLIENT_ID = ebe5a05a98ea4ec9be954a0de938019c;
const REDIRECT_URI = window.location.origin;

export const spotifyApi = SpotifyApi.withUserAuthorization(
  CLIENT_ID,
  REDIRECT_URI,
  ['user-library-read', 'playlist-modify-public', 'user-top-read']
);

export async function createMoodPlaylist(
  mood: string,
  artist?: string,
  song?: string,
  movie?: string
): Promise<string> {
  try {
    // Create a new playlist
    const user = await spotifyApi.currentUser.profile();
    const playlist = await spotifyApi.playlists.createPlaylist(user.id, {
      name: `Moodify: ${mood} ${new Date().toLocaleDateString()}`,
      description: 'Generated by Moodify based on your mood and preferences',
      public: true,
    });

    // Get user's top tracks as seed
    const topTracks = await spotifyApi.personalization.getTopTracks();
    const seedTracks = topTracks.items.slice(0, 2).map(track => track.id);

    // Get recommendations based on mood and preferences
    const recommendations = await spotifyApi.recommendations.get({
      seed_tracks: seedTracks,
      limit: 20,
      target_energy: getMoodEnergy(mood),
      target_valence: getMoodValence(mood),
    });

    // Add tracks to playlist
    await spotifyApi.playlists.addItemsToPlaylist(
      playlist.id,
      recommendations.tracks.map(track => track.uri)
    );

    return playlist.id;
  } catch (error) {
    console.error('Error creating playlist:', error);
    throw error;
  }
}

function getMoodEnergy(mood: string): number {
  const energyMap: Record<string, number> = {
    energetic: 0.8,
    relaxed: 0.3,
    happy: 0.7,
    melancholic: 0.4,
    focused: 0.5,
    french: 0.6,
  };
  return energyMap[mood] || 0.5;
}

function getMoodValence(mood: string): number {
  const valenceMap: Record<string, number> = {
    energetic: 0.7,
    relaxed: 0.6,
    happy: 0.8,
    melancholic: 0.3,
    focused: 0.5,
    french: 0.6,
  };
  return valenceMap[mood] || 0.5;
}